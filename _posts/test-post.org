#+Title: A Test Post
#+AUTHOR: Michael McFarland
#+DESCRIPTION: Here's a test post with some awesome content
#+IMAGE: https://placekitten.com/400/200
#+DATE: 2022-07-04 Mon 15:48

Welcome to a test post

* Overview

Here's a test post with some awesome content
- we're going to list a few things
- another list item sounds good

* Another heading

lets have some source here
#+begin_src javascript
function createStyleObject(classNames, style) {
  return classNames.reduce((styleObject, className) => {
    return { ...styleObject, ...style[className] };
  }, {});
}

function createClassNameString(classNames) {
  return classNames.join(" ");
}

// this comment is here to demonstrate an extremely long line length, well beyond what you should probably allow in your own code, though sometimes you'll be highlighting code you can't refactor, which is unfortunate but should be handled gracefully

function createChildren(style, useInlineStyles) {
  let childrenCount = 0;
  return (children) => {
    childrenCount += 1;
    return children.map((child, i) =>
      createElement({
        node: child,
        style,
        useInlineStyles,
        key: `code-segment-${childrenCount}-${i}`,
      })
    );
  };
}

function createElement({ node, style, useInlineStyles, key }) {
  const { properties, type, tagName, value } = node;
  if (type === "text") {
    return value;
  } else if (tagName) {
    const TagName = tagName;
    const childrenCreator = createChildren(style, useInlineStyles);
    const props = useInlineStyles
      ? { style: createStyleObject(properties.className, style) }
      : { className: createClassNameString(properties.className) };
    const children = childrenCreator(node.children);
    return (
      <TagName key={key} {...props}>
        {children}
      </TagName>
    );
  }
}
#+end_src

this seems pretty sweet huh?

lets remake on that function =helloWorld=

** Hey a subheading
Adding even more content here
- even a list here
