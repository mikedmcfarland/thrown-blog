#+Title: A Test Post
#+AUTHOR: Michael McFarland
#+DESCRIPTION: Here's a test post with some awesome content
#+IMAGE: https://placekitten.com/400/200
#+DATE: 2022-07-04 Mon 15:48

Welcome to a test post This is a nice tagline I guess

* Overview

Here's a test post with some awesome content
- we're going to list a few things
- another list item sounds good

** More headlines
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vel interdum lectus. Nulla facilisi. Cras sit amet neque sit amet enim efficitur vulputate. Etiam augue metus, tempus in lobortis vel, tristique tristique lorem. Suspendisse potenti. Aliquam a magna a lorem malesuada faucibus. Suspendisse potenti.

*** and even more More headlines

Suspendisse commodo risus ac libero accumsan interdum. Proin leo sem, ullamcorper non neque et, ornare blandit orci. Nulla facilisi. Donec ac nisl tortor. Pellentesque sit amet convallis mauris. Aliquam et blandit lectus. Curabitur ex nunc, posuere ut pulvinar at, pharetra id metus. Nulla ac libero quis erat suscipit consectetur interdum semper felis. Phasellus ut libero in quam bibendum suscipit. Quisque ut porttitor magna. In hac habitasse platea dictumst.

**** And an even smalller heading
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed vel interdum lectus. Nulla facilisi. Cras sit amet neque sit amet enim efficitur vulputate. Etiam augue metus, tempus in lobortis vel, tristique tristique lorem. Suspendisse potenti. Aliquam a magna a lorem malesuada faucibus. Suspendisse potenti.


* Another heading

lets have some source here
#+begin_src javascript
function createStyleObject(classNames, style) {
  return classNames.reduce((styleObject, className) => {
    return { ...styleObject, ...style[className] };
  }, {});
}

function createClassNameString(classNames) {
  return classNames.join(" ");
}

// this comment is here to demonstrate an extremely long line length, well beyond what you should probably allow in your own code, though sometimes you'll be highlighting code you can't refactor, which is unfortunate but should be handled gracefully

function createChildren(style, useInlineStyles) {
  let childrenCount = 0;
  return (children) => {
    childrenCount += 1;
    return children.map((child, i) =>
      createElement({
        node: child,
        style,
        useInlineStyles,
        key: `code-segment-${childrenCount}-${i}`,
      })
    );
  };
}

function createElement({ node, style, useInlineStyles, key }) {
  const { properties, type, tagName, value } = node;
  if (type === "text") {
    return value;
  } else if (tagName) {
    const TagName = tagName;
    const childrenCreator = createChildren(style, useInlineStyles);
    const props = useInlineStyles
      ? { style: createStyleObject(properties.className, style) }
      : { className: createClassNameString(properties.className) };
    const children = childrenCreator(node.children);
    return (
      <TagName key={key} {...props}>
        {children}
      </TagName>
    );
  }
}
#+end_src

this seems pretty sweet huh?

lets remake on that function =helloWorld=

** Hey a subheading
Adding even more content here
- even a list here
- lets do an external link to [[https:google.com][google]]
