{
  "$$data_type": "org-document",
  "properties": {
    "title": ["Fun with scalajs lenses and react"],
    "filetags": [],
    "author": ["Michael McFarland"],
    "creator": "Emacs 28.0.60 (Org mode 9.6)",
    "date": ["2015-06-16"],
    "description": [],
    "email": "michaelmcfarland@michaels-air.lan",
    "language": "en"
  },
  "contents": [
    {
      "$$data_type": "org-node",
      "type": "section",
      "ref": "org749f2ec",
      "properties": {
        "robust-begin": 1,
        "robust-end": 405,
        "post-blank": 2,
        "post-affiliated": 1,
        "mode": "first-section",
        "granularity": null
      },
      "contents": [
        {
          "$$data_type": "org-node",
          "type": "keyword",
          "ref": "org61b4139",
          "properties": {
            "key": "TITLE",
            "value": "Fun with scalajs lenses and react",
            "post-blank": 0,
            "post-affiliated": 1,
            "mode": "top-comment",
            "granularity": null
          },
          "contents": []
        },
        {
          "$$data_type": "org-node",
          "type": "keyword",
          "ref": "orgbcd6ec4",
          "properties": {
            "key": "DATE",
            "value": "2015-06-16",
            "post-blank": 0,
            "post-affiliated": 44,
            "mode": null,
            "granularity": null
          },
          "contents": []
        },
        {
          "$$data_type": "org-node",
          "type": "keyword",
          "ref": "orga5707ea",
          "properties": {
            "key": "CATEGORY",
            "value": "Scala",
            "post-blank": 0,
            "post-affiliated": 63,
            "mode": null,
            "granularity": null
          },
          "contents": []
        },
        {
          "$$data_type": "org-node",
          "type": "keyword",
          "ref": "org409a433",
          "properties": {
            "key": "DESCRIPTION",
            "value": "Examples where lenses simplified scalajs react code",
            "post-blank": 1,
            "post-affiliated": 81,
            "mode": null,
            "granularity": null
          },
          "contents": []
        },
        {
          "$$data_type": "org-node",
          "type": "paragraph",
          "ref": "org0034273",
          "properties": {
            "post-blank": 1,
            "post-affiliated": 149,
            "mode": null,
            "granularity": null
          },
          "contents": [
            "I've been working (freelance) on a single page app using ",
            {
              "$$data_type": "org-node",
              "type": "link",
              "ref": "org4319470",
              "properties": {
                "type": "https",
                "path": "//github.com/japgolly/scalajs-react",
                "format": "bracket",
                "raw-link": "https://github.com/japgolly/scalajs-react",
                "application": null,
                "search-option": null,
                "post-blank": 0,
                "is-internal": false,
                "target-ref": null,
                "is-inline-image": false
              },
              "contents": ["scalajs-react"]
            },
            "\n"
          ]
        },
        {
          "$$data_type": "org-node",
          "type": "paragraph",
          "ref": "org05a0753",
          "properties": {
            "post-blank": 0,
            "post-affiliated": 268,
            "mode": null,
            "granularity": null
          },
          "contents": [
            "and lenses helped me cleanup some code.\nThey were fun and straightforward to get started with, so I wanted to quickly share my experience.\n"
          ]
        }
      ]
    },
    {
      "$$data_type": "org-node",
      "type": "headline",
      "ref": "orgbd57c0a",
      "drawer": {},
      "properties": {
        "tags-all": [],
        "raw-value": "The model",
        "pre-blank": 2,
        "robust-begin": 425,
        "robust-end": 812,
        "level": 1,
        "priority": null,
        "tags": [],
        "todo-keyword": null,
        "todo-type": null,
        "post-blank": 2,
        "footnote-section-p": false,
        "archivedp": false,
        "commentedp": false,
        "post-affiliated": 409,
        "title": ["The model"],
        "mode": null,
        "granularity": null,
        "cached": true,
        "org-element--cache-sync-key": [33]
      },
      "contents": [
        {
          "$$data_type": "org-node",
          "type": "section",
          "ref": "org30672d1",
          "properties": {
            "robust-begin": 423,
            "robust-end": 812,
            "post-blank": 2,
            "post-affiliated": 423,
            "mode": "section",
            "granularity": null
          },
          "contents": [
            {
              "$$data_type": "org-node",
              "type": "paragraph",
              "ref": "org0b5c82b",
              "properties": {
                "post-blank": 1,
                "post-affiliated": 423,
                "mode": "planning",
                "granularity": null
              },
              "contents": [
                "Lets say our app has some configuration that can be edited by the user.\nWe'll model it with some case classes:\n"
              ]
            },
            {
              "$$data_type": "org-node",
              "type": "src-block",
              "ref": "org7ddc0f7",
              "properties": {
                "language": "scala",
                "switches": null,
                "parameters": null,
                "number-lines": null,
                "preserve-indent": false,
                "retain-labels": true,
                "use-labels": true,
                "label-fmt": null,
                "value": "  case class Config(restricted: String, mailConfig:MailConfig)\n\n  object Config{\n\n    lazy val default = Config(\"thrownforaloop.com\",MailConfig(\"localhost\",9000,\"mike\"))\n  }\n\n  case class MailConfig(\n    host:String,\n    port:Int,\n    user:String\n  )\n",
                "post-blank": 0,
                "post-affiliated": 535,
                "mode": null,
                "granularity": null
              },
              "contents": []
            }
          ]
        }
      ]
    },
    {
      "$$data_type": "org-node",
      "type": "headline",
      "ref": "org9092a16",
      "drawer": {},
      "properties": {
        "tags-all": [],
        "raw-value": "The editable form",
        "pre-blank": 0,
        "robust-begin": 839,
        "robust-end": 2488,
        "level": 1,
        "priority": null,
        "tags": [],
        "todo-keyword": null,
        "todo-type": null,
        "post-blank": 1,
        "footnote-section-p": false,
        "archivedp": false,
        "commentedp": false,
        "post-affiliated": 816,
        "title": ["The editable form"],
        "mode": null,
        "granularity": null,
        "cached": true,
        "org-element--cache-sync-key": [22]
      },
      "contents": [
        {
          "$$data_type": "org-node",
          "type": "section",
          "ref": "orga279fb7",
          "properties": {
            "robust-begin": 837,
            "robust-end": 2488,
            "post-blank": 1,
            "post-affiliated": 837,
            "mode": "section",
            "granularity": null
          },
          "contents": [
            {
              "$$data_type": "org-node",
              "type": "paragraph",
              "ref": "org41c39c3",
              "properties": {
                "post-blank": 1,
                "post-affiliated": 837,
                "mode": "planning",
                "granularity": null
              },
              "contents": [
                "Lets make a few react components so that we can construct our form.\nWe'll add bootstrap classes to make it a littler more friendly.\n"
              ]
            },
            {
              "$$data_type": "org-node",
              "type": "src-block",
              "ref": "org3c44142",
              "properties": {
                "language": "scala",
                "switches": null,
                "parameters": null,
                "number-lines": null,
                "preserve-indent": false,
                "retain-labels": true,
                "use-labels": true,
                "label-fmt": null,
                "value": "  object Form{\n    case class Field(name:String,value:String,onChange:ReactEventI=>Unit)\n\n\n    val field = ReactComponentB[Field](\"form-field\")\n      .render(P=>{\n        val Field(name,value,onChange) = P\n        <.div(^.`class`:=\"form-group\",\n          <.label(\n            ^.`for` :=name,\n            name.capitalize),\n          <.input(\n            ^.tpe := \"text\",\n            ^.`class`:=\"form-control\",\n            ^.id := name,\n            ^.value := value,\n            ^.onChange ==> onChange\n          ))\n      })\n      .build\n\n    val form = ReactComponentB[Seq[Field]](\"form\")\n      .render(P=>{\n        <.div(^.`class`:=\"panel panel-default\",\n          <.div(^.`class`:=\"panel\",\n            <.div(^.`class`:=\"panel-heading\",\n              \"Config Edit\"\n            ),\n            <.div(^.`class`:=\"panel-body\",\n              <.form(\n                P.map(f => field.withKey(f.name)(f))\n              )\n            )\n          )\n        )\n      })\n    .build\n\n    // a static construction of our form\n    def static() = {\n      val Config(restricted,MailConfig(host,port,user)) = Config.default\n      val noOp = (e:ReactEventI) => {}\n      val fields = Seq(\n          Field(\"restricted\" ,restricted    ,noOp),\n          Field(\"host\"       ,host          ,noOp),\n          Field(\"user\"       ,user          ,noOp),\n          Field(\"port\"       ,port.toString ,noOp))\n\n      form(fields)\n    }\n  }\n",
                "post-blank": 1,
                "post-affiliated": 970,
                "mode": null,
                "granularity": null
              },
              "contents": []
            },
            {
              "$$data_type": "org-node",
              "type": "paragraph",
              "ref": "org59ec782",
              "properties": {
                "post-blank": 0,
                "post-affiliated": 2406,
                "mode": null,
                "granularity": null
              },
              "contents": [
                "Now we have a form component that'll build or inputs given a sequence of ",
                {
                  "$$data_type": "org-node",
                  "type": "verbatim",
                  "ref": "org7b1a891",
                  "properties": {
                    "post-blank": 0,
                    "value": "Field"
                  },
                  "contents": []
                },
                "'s.\n"
              ]
            }
          ]
        }
      ]
    },
    {
      "$$data_type": "org-node",
      "type": "headline",
      "ref": "org9a6c4e6",
      "drawer": {},
      "properties": {
        "tags-all": [],
        "raw-value": "Making it dynamic",
        "pre-blank": 1,
        "robust-begin": 2514,
        "robust-end": 4143,
        "level": 1,
        "priority": null,
        "tags": [],
        "todo-keyword": null,
        "todo-type": null,
        "post-blank": 0,
        "footnote-section-p": false,
        "archivedp": false,
        "commentedp": false,
        "post-affiliated": 2491,
        "title": ["Making it dynamic"],
        "mode": null,
        "granularity": null,
        "cached": true,
        "org-element--cache-sync-key": [43]
      },
      "contents": [
        {
          "$$data_type": "org-node",
          "type": "section",
          "ref": "orgb4c4e87",
          "properties": {
            "robust-begin": 2512,
            "robust-end": 4143,
            "post-blank": 0,
            "post-affiliated": 2512,
            "mode": "section",
            "granularity": null
          },
          "contents": [
            {
              "$$data_type": "org-node",
              "type": "paragraph",
              "ref": "org28f68d3",
              "properties": {
                "post-blank": 1,
                "post-affiliated": 2512,
                "mode": "planning",
                "granularity": null
              },
              "contents": [
                "Lets make this form actually edit the model.\nWe'll do that by making another component which will construct the form.\n"
              ]
            },
            {
              "$$data_type": "org-node",
              "type": "src-block",
              "ref": "org4a86e33",
              "properties": {
                "language": "scala",
                "switches": null,
                "parameters": null,
                "number-lines": null,
                "preserve-indent": false,
                "retain-labels": true,
                "use-labels": true,
                "label-fmt": null,
                "value": "  object ConfigForm{\n    case class Props(onSubmit:Config=>Unit)\n    case class State(config:Config)\n\n    class Backend(t:BackendScope[Unit,State]){\n      def modifyRestricted(e:ReactEventI) = {\n        t.modState(\n          s=>s.copy(\n            config=s.config.copy(\n              restricted=e.currentTarget.value)))\n      }\n      def modifyHost(e:ReactEventI) = {\n        t.modState(\n          s=>s.copy(\n            config=s.config.copy(\n              mailConfig=s.config.mailConfig.copy(\n                host=e.currentTarget.value))))\n      }\n      def modifyUser(e:ReactEventI) = {\n        t.modState(\n          s=>s.copy(\n            config=s.config.copy(\n              mailConfig=s.config.mailConfig.copy(\n                user=e.currentTarget.value))))\n      }\n\n    }\n\n    val form = ReactComponentB[Unit](\"config-form\")\n      .initialState(State(Config.default))\n      .backend(new Backend(_))\n      .render((P,S,B) =>{\n        val Config(restricted,MailConfig(host,port,user)) = S.config\n        val Field = Form.Field\n\n        val fields = Seq(\n          Field(\"restricted\" ,restricted ,B.modifyRestricted),\n          Field(\"host\"       ,host       ,B.modifyHost),\n          Field(\"user\"       ,user       ,B.modifyUser))\n\n        Form.form(fields)\n      })\n      .buildU\n\n  }\n",
                "post-blank": 1,
                "post-affiliated": 2631,
                "mode": null,
                "granularity": null
              },
              "contents": []
            },
            {
              "$$data_type": "org-node",
              "type": "paragraph",
              "ref": "org3f4f032",
              "properties": {
                "post-blank": 0,
                "post-affiliated": 3949,
                "mode": null,
                "granularity": null
              },
              "contents": [
                "Those modify functions work, but man there's a lot of copying of case classes, it'd be nice if we could build functions that take care of that for us cleanly, especially as these structures grow.\n"
              ]
            }
          ]
        }
      ]
    },
    {
      "$$data_type": "org-node",
      "type": "headline",
      "ref": "org3de5772",
      "drawer": {},
      "properties": {
        "tags-all": [],
        "raw-value": "Enter lenses",
        "pre-blank": 1,
        "robust-begin": 4163,
        "robust-end": 5077,
        "level": 1,
        "priority": null,
        "tags": [],
        "todo-keyword": null,
        "todo-type": null,
        "post-blank": 0,
        "footnote-section-p": false,
        "archivedp": false,
        "commentedp": false,
        "post-affiliated": 4145,
        "title": ["Enter lenses"],
        "mode": null,
        "granularity": null,
        "cached": true,
        "org-element--cache-sync-key": [43]
      },
      "contents": [
        {
          "$$data_type": "org-node",
          "type": "section",
          "ref": "orgc39eb97",
          "properties": {
            "robust-begin": 4161,
            "robust-end": 5077,
            "post-blank": 0,
            "post-affiliated": 4161,
            "mode": "section",
            "granularity": null
          },
          "contents": [
            {
              "$$data_type": "org-node",
              "type": "paragraph",
              "ref": "orgb8a7e4b",
              "properties": {
                "post-blank": 1,
                "post-affiliated": 4161,
                "mode": "planning",
                "granularity": null
              },
              "contents": [
                "Lenses give us a way to cleanly and safely edit a piece of a larger immutable structure.\n"
              ]
            },
            {
              "$$data_type": "org-node",
              "type": "src-block",
              "ref": "orgb058132",
              "properties": {
                "language": "scala",
                "switches": null,
                "parameters": null,
                "number-lines": null,
                "preserve-indent": false,
                "retain-labels": true,
                "use-labels": true,
                "label-fmt": null,
                "value": "  val _config     = Lens[State,ConfigItem]      (_.config)     (v => s => s.copy(config=v))\n  val _restricted = Lens[ConfigItem,String]     (_.restricted) (v => c => c.copy(restricted=v))\n  val _mail       = Lens[ConfigItem,MailConfig] (_.mailConfig) (v => c => c.copy(mailConfig=v))\n  val _host       = Lens[MailConfig,String]     (_.host)       (v => m => m.copy(host=v))\n  val _port       = Lens[MailConfig,Int]        (_.port)       (v => m => m.copy(port=v))\n  val _user       = Lens[MailConfig,String]     (_.user)       (v => m => m.copy(user=v))\n  val _password   = Lens[MailConfig,String]     (_.password)   (v => m => m.copy(password=v))\n\n  val _eventV     = Lens[ReactEventI,String]    (_.currentTarget.value)   (v => m => m.copy(password=v))\n  val _mailconfig = _config composeLens _mail\n",
                "post-blank": 0,
                "post-affiliated": 4251,
                "mode": null,
                "granularity": null
              },
              "contents": []
            }
          ]
        }
      ]
    }
  ]
}
