{"pageProps":{"doc":{"$$data_type":"org-document","properties":{"title":["Fun with scalajs lenses and react"],"filetags":["scala","react"],"author":["Michael McFarland"],"creator":"Emacs 28.0.60 (Org mode 9.6)","date":["2015-06-16"],"description":[],"email":"michaelmcfarland@michaels-air.lan","language":"en"},"contents":[{"$$data_type":"org-node","type":"section","ref":"orgd8ec51b","properties":{"robust-begin":1,"robust-end":430,"post-blank":2,"post-affiliated":1,"mode":"first-section","granularity":null},"contents":[{"$$data_type":"org-node","type":"keyword","ref":"org939fd9c","properties":{"key":"TITLE","value":"Fun with scalajs lenses and react","post-blank":0,"post-affiliated":1,"mode":"top-comment","granularity":null},"contents":[]},{"$$data_type":"org-node","type":"keyword","ref":"orge6127ab","properties":{"key":"DATE","value":"2015-06-16","post-blank":0,"post-affiliated":44,"mode":null,"granularity":null},"contents":[]},{"$$data_type":"org-node","type":"keyword","ref":"org58b05c1","properties":{"key":"CATEGORY","value":"Scala","post-blank":0,"post-affiliated":63,"mode":null,"granularity":null},"contents":[]},{"$$data_type":"org-node","type":"keyword","ref":"org83cc046","properties":{"key":"FILETAGS","value":":scala:react","post-blank":0,"post-affiliated":81,"mode":null,"granularity":null},"contents":[]},{"$$data_type":"org-node","type":"keyword","ref":"org06216d1","properties":{"key":"DESCRIPTION","value":"Examples where lenses simplified scalajs react code","post-blank":1,"post-affiliated":106,"mode":null,"granularity":null},"contents":[]},{"$$data_type":"org-node","type":"paragraph","ref":"org8f67fc6","properties":{"post-blank":1,"post-affiliated":174,"mode":null,"granularity":null},"contents":["I've been working (freelance) on a single page app using ",{"$$data_type":"org-node","type":"link","ref":"org7693b0a","properties":{"type":"https","path":"//github.com/japgolly/scalajs-react","format":"bracket","raw-link":"https://github.com/japgolly/scalajs-react","application":null,"search-option":null,"post-blank":0,"is-internal":false,"target-ref":null,"is-inline-image":false},"contents":["scalajs-react"]},"\n"]},{"$$data_type":"org-node","type":"paragraph","ref":"orgeaf7c62","properties":{"post-blank":0,"post-affiliated":293,"mode":null,"granularity":null},"contents":["and lenses helped me cleanup some code.\nThey were fun and straightforward to get started with, so I wanted to quickly share my experience.\n"]}]},{"$$data_type":"org-node","type":"headline","ref":"org2b0e948","drawer":{},"properties":{"tags-all":["scala","react"],"raw-value":"The model","pre-blank":1,"robust-begin":449,"robust-end":836,"level":1,"priority":null,"tags":[],"todo-keyword":null,"todo-type":null,"post-blank":2,"footnote-section-p":false,"archivedp":false,"commentedp":false,"post-affiliated":434,"title":["The model"],"mode":null,"granularity":null},"contents":[{"$$data_type":"org-node","type":"section","ref":"org5523f3a","properties":{"robust-begin":447,"robust-end":836,"post-blank":2,"post-affiliated":447,"mode":"section","granularity":null},"contents":[{"$$data_type":"org-node","type":"paragraph","ref":"orgff765b7","properties":{"post-blank":1,"post-affiliated":447,"mode":"planning","granularity":null},"contents":["Lets say our app has some configuration that can be edited by the user.\nWe'll model it with some case classes:\n"]},{"$$data_type":"org-node","type":"src-block","ref":"orge5b5a13","properties":{"language":"scala","switches":null,"parameters":null,"number-lines":null,"preserve-indent":false,"retain-labels":true,"use-labels":true,"label-fmt":null,"value":"  case class Config(restricted: String, mailConfig:MailConfig)\n\n  object Config{\n\n    lazy val default = Config(\"thrownforaloop.com\",MailConfig(\"localhost\",9000,\"mike\"))\n  }\n\n  case class MailConfig(\n    host:String,\n    port:Int,\n    user:String\n  )\n","post-blank":0,"post-affiliated":559,"mode":null,"granularity":null},"contents":[]}]}]},{"$$data_type":"org-node","type":"headline","ref":"org5816233","drawer":{},"properties":{"tags-all":["scala","react"],"raw-value":"The editable form","pre-blank":0,"robust-begin":863,"robust-end":2512,"level":1,"priority":null,"tags":[],"todo-keyword":null,"todo-type":null,"post-blank":1,"footnote-section-p":false,"archivedp":false,"commentedp":false,"post-affiliated":840,"title":["The editable form"],"mode":null,"granularity":null},"contents":[{"$$data_type":"org-node","type":"section","ref":"orgb778026","properties":{"robust-begin":861,"robust-end":2512,"post-blank":1,"post-affiliated":861,"mode":"section","granularity":null},"contents":[{"$$data_type":"org-node","type":"paragraph","ref":"orge5bf28f","properties":{"post-blank":1,"post-affiliated":861,"mode":"planning","granularity":null},"contents":["Lets make a few react components so that we can construct our form.\nWe'll add bootstrap classes to make it a littler more friendly.\n"]},{"$$data_type":"org-node","type":"src-block","ref":"org0c7a5de","properties":{"language":"scala","switches":null,"parameters":null,"number-lines":null,"preserve-indent":false,"retain-labels":true,"use-labels":true,"label-fmt":null,"value":"  object Form{\n    case class Field(name:String,value:String,onChange:ReactEventI=>Unit)\n\n\n    val field = ReactComponentB[Field](\"form-field\")\n      .render(P=>{\n        val Field(name,value,onChange) = P\n        <.div(^.`class`:=\"form-group\",\n          <.label(\n            ^.`for` :=name,\n            name.capitalize),\n          <.input(\n            ^.tpe := \"text\",\n            ^.`class`:=\"form-control\",\n            ^.id := name,\n            ^.value := value,\n            ^.onChange ==> onChange\n          ))\n      })\n      .build\n\n    val form = ReactComponentB[Seq[Field]](\"form\")\n      .render(P=>{\n        <.div(^.`class`:=\"panel panel-default\",\n          <.div(^.`class`:=\"panel\",\n            <.div(^.`class`:=\"panel-heading\",\n              \"Config Edit\"\n            ),\n            <.div(^.`class`:=\"panel-body\",\n              <.form(\n                P.map(f => field.withKey(f.name)(f))\n              )\n            )\n          )\n        )\n      })\n    .build\n\n    // a static construction of our form\n    def static() = {\n      val Config(restricted,MailConfig(host,port,user)) = Config.default\n      val noOp = (e:ReactEventI) => {}\n      val fields = Seq(\n          Field(\"restricted\" ,restricted    ,noOp),\n          Field(\"host\"       ,host          ,noOp),\n          Field(\"user\"       ,user          ,noOp),\n          Field(\"port\"       ,port.toString ,noOp))\n\n      form(fields)\n    }\n  }\n","post-blank":1,"post-affiliated":994,"mode":null,"granularity":null},"contents":[]},{"$$data_type":"org-node","type":"paragraph","ref":"orgd400e48","properties":{"post-blank":0,"post-affiliated":2430,"mode":null,"granularity":null},"contents":["Now we have a form component that'll build or inputs given a sequence of ",{"$$data_type":"org-node","type":"verbatim","ref":"org57de7d4","properties":{"post-blank":0,"value":"Field"},"contents":[]},"'s.\n"]}]}]},{"$$data_type":"org-node","type":"headline","ref":"org1203f95","drawer":{},"properties":{"tags-all":["scala","react"],"raw-value":"Making it dynamic","pre-blank":1,"robust-begin":2538,"robust-end":4167,"level":1,"priority":null,"tags":[],"todo-keyword":null,"todo-type":null,"post-blank":0,"footnote-section-p":false,"archivedp":false,"commentedp":false,"post-affiliated":2515,"title":["Making it dynamic"],"mode":null,"granularity":null},"contents":[{"$$data_type":"org-node","type":"section","ref":"orgb7ab244","properties":{"robust-begin":2536,"robust-end":4167,"post-blank":0,"post-affiliated":2536,"mode":"section","granularity":null},"contents":[{"$$data_type":"org-node","type":"paragraph","ref":"orgbe5e360","properties":{"post-blank":1,"post-affiliated":2536,"mode":"planning","granularity":null},"contents":["Lets make this form actually edit the model.\nWe'll do that by making another component which will construct the form.\n"]},{"$$data_type":"org-node","type":"src-block","ref":"org2497656","properties":{"language":"scala","switches":null,"parameters":null,"number-lines":null,"preserve-indent":false,"retain-labels":true,"use-labels":true,"label-fmt":null,"value":"  object ConfigForm{\n    case class Props(onSubmit:Config=>Unit)\n    case class State(config:Config)\n\n    class Backend(t:BackendScope[Unit,State]){\n      def modifyRestricted(e:ReactEventI) = {\n        t.modState(\n          s=>s.copy(\n            config=s.config.copy(\n              restricted=e.currentTarget.value)))\n      }\n      def modifyHost(e:ReactEventI) = {\n        t.modState(\n          s=>s.copy(\n            config=s.config.copy(\n              mailConfig=s.config.mailConfig.copy(\n                host=e.currentTarget.value))))\n      }\n      def modifyUser(e:ReactEventI) = {\n        t.modState(\n          s=>s.copy(\n            config=s.config.copy(\n              mailConfig=s.config.mailConfig.copy(\n                user=e.currentTarget.value))))\n      }\n\n    }\n\n    val form = ReactComponentB[Unit](\"config-form\")\n      .initialState(State(Config.default))\n      .backend(new Backend(_))\n      .render((P,S,B) =>{\n        val Config(restricted,MailConfig(host,port,user)) = S.config\n        val Field = Form.Field\n\n        val fields = Seq(\n          Field(\"restricted\" ,restricted ,B.modifyRestricted),\n          Field(\"host\"       ,host       ,B.modifyHost),\n          Field(\"user\"       ,user       ,B.modifyUser))\n\n        Form.form(fields)\n      })\n      .buildU\n\n  }\n","post-blank":1,"post-affiliated":2655,"mode":null,"granularity":null},"contents":[]},{"$$data_type":"org-node","type":"paragraph","ref":"orgc5a1ce1","properties":{"post-blank":0,"post-affiliated":3973,"mode":null,"granularity":null},"contents":["Those modify functions work, but man there's a lot of copying of case classes, it'd be nice if we could build functions that take care of that for us cleanly, especially as these structures grow.\n"]}]}]},{"$$data_type":"org-node","type":"headline","ref":"orgc1802bf","drawer":{},"properties":{"tags-all":["scala","react"],"raw-value":"Enter lenses","pre-blank":1,"robust-begin":4187,"robust-end":5101,"level":1,"priority":null,"tags":[],"todo-keyword":null,"todo-type":null,"post-blank":0,"footnote-section-p":false,"archivedp":false,"commentedp":false,"post-affiliated":4169,"title":["Enter lenses"],"mode":null,"granularity":null},"contents":[{"$$data_type":"org-node","type":"section","ref":"orgb976d1b","properties":{"robust-begin":4185,"robust-end":5101,"post-blank":0,"post-affiliated":4185,"mode":"section","granularity":null},"contents":[{"$$data_type":"org-node","type":"paragraph","ref":"org06fa321","properties":{"post-blank":1,"post-affiliated":4185,"mode":"planning","granularity":null},"contents":["Lenses give us a way to cleanly and safely edit a piece of a larger immutable structure.\n"]},{"$$data_type":"org-node","type":"src-block","ref":"orgeedfdbc","properties":{"language":"scala","switches":null,"parameters":null,"number-lines":null,"preserve-indent":false,"retain-labels":true,"use-labels":true,"label-fmt":null,"value":"  val _config     = Lens[State,ConfigItem]      (_.config)     (v => s => s.copy(config=v))\n  val _restricted = Lens[ConfigItem,String]     (_.restricted) (v => c => c.copy(restricted=v))\n  val _mail       = Lens[ConfigItem,MailConfig] (_.mailConfig) (v => c => c.copy(mailConfig=v))\n  val _host       = Lens[MailConfig,String]     (_.host)       (v => m => m.copy(host=v))\n  val _port       = Lens[MailConfig,Int]        (_.port)       (v => m => m.copy(port=v))\n  val _user       = Lens[MailConfig,String]     (_.user)       (v => m => m.copy(user=v))\n  val _password   = Lens[MailConfig,String]     (_.password)   (v => m => m.copy(password=v))\n\n  val _eventV     = Lens[ReactEventI,String]    (_.currentTarget.value)   (v => m => m.copy(password=v))\n  val _mailconfig = _config composeLens _mail\n","post-blank":0,"post-affiliated":4275,"mode":null,"granularity":null},"contents":[]}]}]}]}},"__N_SSG":true}